brecksblog README

A high performance blog in under 100 lines of code(and 1 .htaccess file). No MySQL needed!
Stores entries as one text file(posts.php). Doesn't do any type of voting or comments.
If you want stats, add Google analytics. If you want comments, add Disqus, etc.
If you want voting, submit to social networking sites.

Installation:
Make posts.php writeable

Requirements:
PHP 5
Apache with Mod_rewrite enabled

Warnings:
This blogging software is not for everyone.
It is NOT written to be extensible. But you can
easily extend it. There's not much of a development
path for it. It will be refined but it is unlikely
new features will be added.
It is simple blog software easy to customize.
It is full of limitations (but easy to extend or modify).
There are bugs that will occur in rare circumstances.
The fact that there are bugs is a feature not a defect.
This is designed to work great in most cases, and not
designed to work great for rare or special needs. Feel free
to modify.
Posts use timestamps as their unique ID. Not sure what will happen if you post
two things at the same time(it will probably break).
I've tried to make this as simple as possible and I have made
decisions on how things work based upon what I believe will
appeal to the most people.  
Other things that may break it:
Having titles with the same name(or titles, when cleaned, that are identical)
Posting a lot of posts (as long as posts.php is in memory fine, but
if you have a few MB of posts, you don't want it going to disk I dont think)


Benefits:
Dead simple to install--just copy the files and start blogging!
Easy to use--no unneeded features, includes just what's really important!
Easy to customize--less than 100 lines of code, modify as you want!
No database required! Simple to setup
Install multiple blogs fast--just create 1 folder per blog.

Features:
Create Blog Posts
Edit Blog Posts
Delete Blog Posts
Password Protected Creating and Editing
SEO friendly URLS
SEO friendly titles, meta descriptions, and h1s


TODO:
Get it under 100 lines.
Reduce long lines to under 80 characters.
Add better documentation.
Clean up code a bit.
Run some sites off it and see what works, what doesn't.
Benchmark it.
Check it for security bugs(obvious one: vulnerable to brute force pw guessing).
Use sessions to remember password?
Choose a license. MIT? GPL? no idea about any of those.